'''
created by edgard.ramos (ismytv@gmail.com)
generated by alice.bash.v.2203a
__date__
'''
from django import forms
from django.utils.translation import gettext_lazy as _
from datetime import datetime
#from django.core.exceptions import ValidationError
from base.models import Compra

 
class CompraForm(forms.ModelForm):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.set_data()

    def set_data(self):
        self.fields['tarjeta'].widget.attrs['autofocus'] = True

    class Meta:
        model = Compra
        fields = [  'tarjeta', 'comercio', 'monto', 'cuotas', 'monto_cuota',
                    'fecha_compra', 'detalle', 'obs', 'is_fuera_cierre', 'is_online'
        ]

        widgets = {
                'fecha_compra': forms.DateInput(format='%Y-%m-%d', attrs={
                'value': datetime.now().strftime('%Y-%m-%d'),
                'autocomplete': 'off',
                'class': 'form-control datetimepicker-input',
                'id': 'date_joined',
                'data-target': '#date_joined',
                'data-toggle': 'datetimepicker'
            })
        }

        error_messages = {
            # 'desc': {
            #     'unique': _("Ya existe rubro con esa descripción."),
            # },
        }

    def clean(self):
        return super().clean()
    
    def clean_detalle(self):
        data = self.cleaned_data['detalle']
        data = data.strip().upper() if data != None else data 
        # if Compra.objects.filter(desc=data).exists() :
        #     raise ValidationError("Descripción ya registrada!")

        # Always return a value to use as the new cleaned data, even if
        # this method didn't change it.
        return data