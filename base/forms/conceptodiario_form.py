'''
created by edgard.ramos (ismytv@gmail.com)
generated by alice.bash.v.2203a
__date__
'''
from django import forms
from django.utils.translation import gettext_lazy as _
#from django.core.exceptions import ValidationError
from base.models import ConceptoDiario
from base.business.brubrodiario import BRubroDiario

 
class ConceptoDiarioForm(forms.ModelForm):
    def __init__(self, request, *args, **kwargs):
        super().__init__(*args, **kwargs)
        print('ed0')
        # self.instance = kwargs.get('instance') if 'instance' in kwargs else None
        oBRubroDiario = BRubroDiario()
        self.fields['rubro_diario'].queryset = oBRubroDiario.get_all(request.user.license_id)
        self.fields['desc'].widget.attrs['autofocus'] = True

    class Meta:
        model = ConceptoDiario
        fields = ['desc', 'rubro_diario']

        error_messages = {
            'desc': {
                'unique': _("Ya existe concepto con esa descripción."),
            },
        }

    def clean(self):
        return super().clean()
    
    def clean_desc(self):
        print('ed-1')
        data = self.cleaned_data['desc'].strip().upper()
        print('ed-11')
        try:
            print('ed-01')
            reg = ConceptoDiario.objects.get(desc=data)
            print('ed1-02', self.instance.id, type(self.instance.id))
            if not self.instance.id or self.instance.id != reg.id:
                raise forms.ValidationError('Ya existe otro registro con esa descripción')
        except ConceptoDiario.DoesNotExist:
            print('ed-x')
            pass

        # Always return a value to use as the new cleaned data, even if
        # this method didn't change it.
        return data