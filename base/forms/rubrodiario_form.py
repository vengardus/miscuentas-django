'''
created by edgard.ramos (ismytv@gmail.com)
generated by alice.bash.v.2203a
__date__
'''
from django import forms
from django.utils.translation import gettext_lazy as _
#from django.core.exceptions import ValidationError
from base.models import RubroDiario


class RubroDiarioForm(forms.ModelForm):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.fields['desc'].widget.attrs['autofocus'] = True

    class Meta:
        model = RubroDiario
        fields = ['desc', 'tipo_movimiento', 'is_servicio']
        #self.fields['name'].widget.attrs['autofocus'] = True
        # widgets = {
        #     'desc': forms.CharField(attrs={'placeholder': 'Ingrese una descripción', 'rows': 3, 'cols': 3}),
        # }

        error_messages = {
            'desc': {
                'unique': _("Ya existe rubro con esa descripción."),
            },
        }

    def clean(self):
        return super().clean()
    
    def clean_desc(self):
        data = self.cleaned_data['desc'].strip().upper()
        # print(data)
        # if Ubicacion_N1.objects.filter(desc=data).exists() :
        #     raise ValidationError("Descripción ya registrada!")

        # Always return a value to use as the new cleaned data, even if
        # this method didn't change it.
        return data

